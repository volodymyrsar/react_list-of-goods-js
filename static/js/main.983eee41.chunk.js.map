{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPH","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","reverseField","setReverseField","visibleGoods","goods","sort","good1","good2","localeCompare","length","reverse","getVisibleGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAkB,sBAClBC,EAAoB,iBA2BnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACMC,EA5BR,SAAyBC,EAAOL,EAAWE,GACzC,IAAME,EAAY,YAAOC,GAqBzB,OAnBIL,GACFI,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAQR,GACN,KAAKJ,EACH,OAAOW,EAAME,cAAcD,GAE7B,KAAKX,EACH,OAAOU,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXR,GACFE,EAAaO,UAGRP,EAMcQ,CACnBjB,EACAK,EACAE,GAQF,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMb,EAAaL,IAC5BmB,KAAK,SACLF,UAAWG,IAAG,CAAC,SAAU,WAAY,CACnC,WAAYhB,IAAcJ,IAJ9B,iCAUA,wBACEkB,QAAS,kBAAMb,EAAaJ,IAC5BkB,KAAK,SACLF,UAAWG,IAAG,CAAC,SAAU,cAAe,CACtC,WAAYhB,IAAcH,IAJ9B,4BAUA,wBACEiB,QAAS,kBAAMX,GAAiBD,IAChCa,KAAK,SACLF,UAAWG,IAAG,CAAC,SAAU,cAAe,CACtC,YAAad,IAJjB,sBAUEF,IAAcJ,GACbI,IAAcH,GACdK,IAED,wBACEY,QA3CI,WACZb,EAAa,IACbE,GAAgB,IA0CRY,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACGT,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YC3GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.983eee41.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPH = 'Sort alphabetically';\nconst SORT_FIELD_LENGTH = 'Sort by length';\n\nfunction getVisibleGoods(goods, sortField, reverseField) {\n  const visibleGoods = [...goods];\n\n  if (sortField) {\n    visibleGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPH:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseField) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverseField, setReverseField] = useState(false);\n  const visibleGoods = getVisibleGoods(\n    goodsFromServer,\n    sortField,\n    reverseField,\n  );\n\n  const reset = () => {\n    setSortField('');\n    setReverseField(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_FIELD_ALPH)}\n          type=\"button\"\n          className={cn(['button', 'is-info'], {\n            'is-light': sortField !== SORT_FIELD_ALPH,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          type=\"button\"\n          className={cn(['button', 'is-success'], {\n            'is-light': sortField !== SORT_FIELD_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setReverseField(!reverseField)}\n          type=\"button\"\n          className={cn(['button', 'is-warning'], {\n            'is-light': !reverseField,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortField === SORT_FIELD_ALPH\n        || sortField === SORT_FIELD_LENGTH\n        || reverseField)\n        && (\n          <button\n            onClick={reset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}